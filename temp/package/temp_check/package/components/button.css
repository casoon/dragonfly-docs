/*
 * Button Module
 *
 * Standardisierte Buttons mit Varianten und Zuständen.
 */

/**
 * Button-Modul
 * 
 * Interaktive Schaltflächen für Benutzeraktionen und Formularsteuerung.
 * Buttons sind die primären interaktiven Elemente der Benutzeroberfläche.
 * 
 * @layer: module-button
 * 
 * Verwendung:
 * <button class="button">Standard Button</button>
 * 
 * Varianten:
 * <button class="button primary">Primär</button>
 * <button class="button secondary">Sekundär</button>
 * <button class="button tertiary">Tertiär</button>
 * <button class="button success">Erfolg</button>
 * <button class="button warning">Warnung</button>
 * <button class="button danger">Gefahr</button>
 * <button class="button info">Info</button>
 * <button class="button link">Link-Style</button>
 * 
 * Größen:
 * <button class="button xs">Extra Klein</button>
 * <button class="button sm">Klein</button>
 * <button class="button md">Mittel (Standard)</button>
 * <button class="button lg">Groß</button>
 * <button class="button xl">Extra Groß</button>
 * 
 * Zustände:
 * <button class="button" disabled>Deaktiviert</button>
 * <button class="button loading">Lädt...</button>
 * 
 * Mit Icon:
 * <button class="button with-icon">
 *   <span class="icon"><!-- Icon hier --></span>
 *   <span>Button mit Icon</span>
 * </button>
 * 
 * Nur Icon:
 * <button class="button icon-only">
 *   <span class="icon"><!-- Icon hier --></span>
 * </button>
 * 
 * Flüssig skalierender Button (nutzt interpolate-size):
 * <button class="button fluid">Adaptive Button</button>
 */

@layer button {
  .button {
    align-items: center;
    background-color: var(--color-primary);
    border: none;
    border-radius: var(--radius-md);
    color: white;
    cursor: pointer;
    display: inline-flex;
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    justify-content: center;
    line-height: 1.25;
    padding-block: var(--space-2);
    padding-inline: var(--space-4);
    transition: background-color var(--transition-fast);

    &:hover {
      background-color: var(--color-primary-dark);
    }

    /* Varianten */
    &.secondary {
      background-color: var(--color-secondary);

      &:hover {
        background-color: var(--color-secondary-dark);
      }
    }

    &.outline {
      background-color: transparent;
      border: 1px solid var(--color-primary);
      color: var(--color-primary);

      &:hover {
        background-color: var(--color-primary-light);
        color: white;
      }
    }

    /* Größen */
    &.sm {
      font-size: var(--font-size-xs);
      padding-block: var(--space-1);
      padding-inline: var(--space-3);
    }

    &.lg {
      font-size: var(--font-size-base);
      padding-block: var(--space-3);
      padding-inline: var(--space-6);
    }
    
    /* Fluid Button mit interpolate-size */
    &.fluid {
      /* Flüssig skalierende Font-Größe basierend auf Container-Größe */
      font-size: medium; /* wird mit allow-keywords flüssiger */
      
      /* Flüssige Padding-Anpassung im Container */
      @container (min-width: 400px) {
        font-size: large;
        padding-block: var(--space-3);
        padding-inline: var(--space-5);
      }
      
      @container (min-width:
       600px) {
        font-size: x-large;
        padding-block: var(--space-4);
        padding-inline: var(--space-6);
      }
    }

    /* Zustände */
    &:disabled {
      cursor: not-allowed;
      opacity: 60%;
    }

    &.loading {
      color: transparent;
      position: relative;

      &::after {
        animation: spin 1s linear infinite;
        border: 2px solid currentcolor;
        border-radius: 50%;
        border-right-color: transparent;
        content: "";
        height: 1rem;
        position: absolute;
        width: 1rem;
      }
    }

    /* Icon-Handling */
    &.with-icon {
      gap: var(--space-2);

      .icon {
        display: inline-flex;
        height: 1em;
        width: 1em;
      }
    }

    &.icon-only {
      aspect-ratio: 1;
      padding: var(--space-2);

      .icon {
        height: 1.25em;
        width: 1.25em;
      }
    }
  }
}

@keyframes spin {
  from { transform: rotate(0deg); }

  to { transform: rotate(360deg); }
}