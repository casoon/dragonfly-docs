/**
 * Formular-Styling-System
 * 
 * Diese Datei bietet ein umfassendes System für das Styling von Formularelementen,
 * einschließlich Textfeldern, Auswahlfeldern, Checkboxen, Radios und mehr.
 * Das System ist darauf ausgelegt, konsistente, zugängliche und responsive Formulare zu erzeugen.
 * 
 * Hauptmerkmale:
 * - Variablensystem für konsistentes Styling und einfache Anpassung
 * - Flexible Layout-Optionen (vertikal, horizontal, mehrspaltig)
 * - Validierungszustände und Feedback-Mechanismen
 * - Umfangreiche Barrierefreiheit und Tastatur-Navigation
 * - Responsive Anpassung für verschiedene Bildschirmgrößen
 * - Kompatibilität mit dem Container-Query-System aus layout.css
 * - Unterstützung für interpolate-size: allow-keywords mit fluid und adaptive Klassen
 * - Optionale field-sizing: content für natürlichere Eingabefelder
 * - Umfassende Unterstützung für alle HTML5 Input-Typen
 * - RTL-Unterstützung für mehrsprachige Anwendungen
 * 
 * @layer forms, form, utilities;
 */

@layer forms {
  /**
   * Form Variables
   * 
   * CSS-Variablen die das Formular-Styling steuern. 
   * Diese Variablen ermöglichen eine konsistente Darstellung und einfache Anpassung.
   * Die Variablen basieren auf den globalen Design-Tokens aus tokens.css.
   */
  :root {
    /* Grundlegende Formular-Variablen */
    --form-gap: var(--spacing-4);        /* Abstand zwischen Formularelementen */
    --form-padding: var(--spacing-4);    /* Innenabstand des Formulars */
    --form-padding-y: var(--spacing-2);  /* Vertikaler Innenabstand */
    --form-padding-x: var(--spacing-3);  /* Horizontaler Innenabstand */
    --form-font-size: var(--font-size-base); /* Basisschriftgröße */
    --form-line-height: var(--line-height-base); /* Basiszeilenhöhe */
    --form-color: var(--color-text-primary); /* Textfarbe */
    --form-background: var(--color-background); /* Hintergrundfarbe */
    --form-border-color: var(--color-border); /* Rahmenfarbe */
    --form-border-radius: var(--border-radius-md); /* Rahmenradius */
    --form-box-shadow: var(--shadow-sm); /* Schatten */
    --form-transition: all var(--transition-normal); /* Übergangsanimation */
    
    /* Input-spezifische Variablen */
    --input-padding-y: var(--spacing-2);  /* Vertikaler Innenabstand für Inputs */
    --input-padding-x: var(--spacing-3);  /* Horizontaler Innenabstand für Inputs */
    --input-height: 2.5rem;               /* Höhe von Eingabefeldern */
    --input-font-size: var(--font-size-base); /* Schriftgröße von Eingabefeldern */
    --input-bg: var(--color-background);  /* Hintergrundfarbe von Eingabefeldern */
    --input-color: var(--color-text-primary); /* Textfarbe von Eingabefeldern */
    --input-border-color: var(--color-border); /* Rahmenfarbe von Eingabefeldern */
    --input-border-width: 1px;            /* Rahmenstärke von Eingabefeldern */
    --input-border-radius: var(--border-radius-md); /* Rahmenradius von Eingabefeldern */
    
    /* Select-spezifische Variablen */
    --select-padding-right: 2.5rem;       /* Rechter Innenabstand für Dropdown-Pfeil */
    --select-indicator-padding: 1.75rem;  /* Abstand des Dropdown-Pfeils vom Rand */
    --select-indicator-size: 0.75rem;     /* Größe des Dropdown-Pfeils */
    --select-indicator-color: var(--color-text-secondary); /* Farbe des Dropdown-Pfeils */
    
    /* Checkbox/Radio-spezifische Variablen */
    --control-indicator-size: 1.25rem;    /* Größe von Checkboxen und Radios */
    --control-indicator-bg: var(--color-background); /* Hintergrundfarbe */
    --control-indicator-border-color: var(--color-border); /* Rahmenfarbe */
    --control-indicator-checked-bg: var(--color-primary-500); /* Hintergrundfarbe bei Auswahl */
    --control-indicator-checked-border-color: var(--color-primary-500); /* Rahmenfarbe bei Auswahl */
    --control-indicator-checked-color: var(--color-white); /* Symbol-Farbe bei Auswahl */
    
    /* Dark Mode Unterstützung */
    color-scheme: light dark;

    /* Dark Mode Fallback-Variablen */
    --form-disabled-bg: var(--color-gray-100);
    --form-group-text-bg: var(--color-gray-100);
    --form-range-bg: var(--color-gray-200);
    --form-file-button-bg: var(--color-gray-200);
    --form-file-button-hover-bg: var(--color-gray-300);
    --form-button-bg: var(--color-gray-200);
    --form-button-border: var(--color-gray-300);
    --form-button-hover-bg: var(--color-gray-300);

    @media (prefers-color-scheme: dark) {
      --form-disabled-bg: var(--color-gray-800);
      --form-group-text-bg: var(--color-gray-700);
      --form-range-bg: var(--color-gray-700);
      --form-file-button-bg: var(--color-gray-700);
      --form-file-button-hover-bg: var(--color-gray-600);
      --form-button-bg: var(--color-gray-700);
      --form-button-border: var(--color-gray-600);
      --form-button-hover-bg: var(--color-gray-600);
    }
  }

  /**
   * Modulare Komponenten-Hinweis
   * 
   * Dieses Kommentar informiert über die verfügbaren spezialisierten Module,
   * die erweiterte Funktionen für bestimmte Formularelemente bieten.
   * Diese Module können zusammen mit dieser Basisdatei verwendet werden.
   */

  /**
   * Hinweis zu modularen Komponenten:
   * Einige Formularkomponenten sind auch als separate Module verfügbar:
   * - input.module.css - Für Input-Felder mit erweiterten Funktionen und Varianten
   * - select.module.css - Für Select-Felder mit Suchfunktion, Mehrfachauswahl und mehr
   * - checkbox.module.css - Für Checkboxen mit verschiedenen Stilen und Animationen
   * - radio.module.css - Für Radio-Buttons mit anpassbaren Stilen
   * - textarea.module.css - Für mehrzeilige Texteingaben mit automatischer Größenanpassung
   * - switch.module.css - Für Toggle-Schalter mit verschiedenen Größen und Stilen
   * - file.module.css - Für Datei-Upload-Felder mit Drag & Drop und Vorschau
   * - input-group.module.css - Für Eingabegruppen mit Buttons/Icons und mehr
   * 
   * Die Module bieten umfangreichere Funktionen und Varianten, 
   * während diese globalen Klassen für einfache Formulare ausreichen.
   */

  /**
   * Basis-Formularstile
   * 
   * Definiert grundlegende Container und Layout-Optionen für Formulare.
   * Verschiedene Klassen ermöglichen flexible Formularstrukturen.
   */

  /* Form Base - Vertikales Layout */
  .form {
    background-color: var(--form-background);
    color: var(--form-color);
    display: flex;
    flex-direction: column;
    gap: var(--form-gap);
    padding: var(--form-padding);
  }

  /* Form Inline - Horizontales Layout */
  .form-layout-inline {
    align-items: flex-end;
    display: flex;
    flex-flow: row wrap;
    gap: var(--spacing-4);
  }

  .form-layout-inline .form-group {
    flex: 1 0 auto;
    margin-bottom: 0;
    min-width: 250px;
  }

  /* Form Group - Gruppierung zusammengehöriger Elemente */
  .form-group {
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
    margin-bottom: var(--spacing-4);
  }

  .form-group:last-child {
    margin-bottom: 0;
  }

  /* Form Row - Mehrspaltiges Layout innerhalb eines Formulars */
  .form-row {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-4);
  }

  .form-row > * {
    flex: 1;
    min-width: 200px;
  }

  /**
   * Formular-Labels und Hilfstexte
   * 
   * Definiert Stile für Beschriftungen, Pflichtfeldmarkierungen und Hilfstexte.
   * Diese Elemente verbessern die Benutzererfahrung und Barrierefreiheit.
   */

  /* Standard-Label */
  .form-label {
    color: var(--color-text-primary);
    display: block;
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-medium);
    margin-bottom: var(--spacing-1);
  }

  /* Pflichtfeld-Markierung mit Sternchen */
  .form-label.required::after {
    color: var(--color-error);
    content: "*";
    margin-left: var(--spacing-1);
  }

  [dir="rtl"] .form-label.required::after {
    margin-left: 0;
    margin-right: var(--spacing-1);
  }

  /* Hilfetext unterhalb von Formularfeldern */
  .form-text {
    color: var(--color-text-secondary);
    display: block;
    font-size: var(--font-size-sm);
    margin-top: var(--spacing-1);
  }

  /* Feedback für Validierung */
  .feedback {
    font-size: var(--font-size-xs);
    margin-top: var(--space-1);
  }

  /**
   * Basis-Eingabefelder
   * 
   * .form-control ist die Hauptklasse für Eingabefelder wie Input, Select, Textarea.
   * Definiert Grundstil und verschiedene Zustände (Fokus, Deaktiviert, etc.).
   */

  /* Basis-Eingabefeld */
  .form-control {
    background-color: var(--input-bg);
    border: var(--input-border-width) solid var(--input-border-color);
    border-radius: var(--input-border-radius);
    box-shadow: var(--form-box-shadow);
    color: var(--input-color);
    display: block;
    
    /* Experimentelle Eigenschaft für natürlichere Feldgrößen */
    field-sizing: content; /* Optionale Eigenschaft */
    font-size: var(--input-font-size);
    line-height: var(--form-line-height);
    padding: var(--input-padding-y) var(--input-padding-x);
    transition: var(--form-transition);
    width: 100%;
  }

  /* Fokus-Zustand mit hervorgehobener Umrandung */
  .form-control:focus {
    border-color: var(--color-primary-500);
    box-shadow: 0 0 0 0.2rem rgb(var(--color-primary-rgb), 0.25);
    outline: none;
  }

  /* Platzhaltertext in Eingabefeldern */
  .form-control::placeholder {
    color: var(--color-text-tertiary);
    opacity: 100%;
  }

  /* Deaktivierte und schreibgeschützte Eingabefelder */
  .form-control:disabled,
  .form-control[readonly] {
    background-color: var(--form-disabled-bg); /* Fallback */
    cursor: not-allowed;
    opacity: 70%;
  }

  /**
   * Formular-Validierung
   * 
   * Definiert Stile für gültige und ungültige Eingabefelder,
   * sowie die zugehörigen Feedback-Meldungen.
   * Kann sowohl manuell als auch mit .was-validated aktiviert werden.
   */

  /* Gültiger Zustand */
  .form-control.is-valid, .form-group.valid .form-control {
    border-color: var(--color-success);
  }

  .form-control.is-valid:focus, .form-group.valid .form-control:focus {
    border-color: var(--color-success);
    box-shadow: 0 0 0 0.2rem rgb(var(--color-success-rgb), 0.25);
  }

  /* Ungültiger Zustand */
  .form-control.is-invalid, .form-group.invalid .form-control {
    border-color: var(--color-error);
  }

  .form-control.is-invalid:focus, .form-group.invalid .form-control:focus {
    border-color: var(--color-error);
    box-shadow: 0 0 0 0.2rem rgb(var(--color-error-rgb), 0.25);
  }

  /**
   * Moderne Validierungsstile mit :has()
   * 
   * Nutzt den modernen :has()-Selektor, um Validierungszustände
   * auf Elternebene basierend auf dem Zustand der Kind-Inputs anzuzeigen.
   * Bietet visuelle Indikatoren für Valid/Invalid ohne zusätzliche Klassen.
   */
  .form-group:has(.form-control:invalid) {
    border-left: 4px solid var(--color-error);
    padding-left: var(--spacing-3);
  }

  [dir="rtl"] .form-group:has(.form-control:invalid) {
    border-left: none;
    border-right: 4px solid var(--color-error);
    padding-left: 0;
    padding-right: var(--spacing-3);
  }

  .form-group:has(.form-control:valid:not(:placeholder-shown)) {
    border-left: 4px solid var(--color-success);
    padding-left: var(--spacing-3);
  }

  [dir="rtl"] .form-group:has(.form-control:valid:not(:placeholder-shown)) {
    border-left: none;
    border-right: 4px solid var(--color-success);
    padding-left: 0;
    padding-right: var(--spacing-3);
  }

  /* Visuelle Indikatoren neben den Eingabefeldern */
  .form-group:has(.form-control:invalid) .form-label::after {
    content: "⚠️";
    display: inline-block;
    margin-left: var(--spacing-2);
    vertical-align: middle;
  }
  
  [dir="rtl"] .form-group:has(.form-control:invalid) .form-label::after {
    margin-left: 0;
    margin-right: var(--spacing-2);
  }

  .form-group:has(.form-control:valid:not(:placeholder-shown)) .form-label::after {
    color: var(--color-success);
    content: "✓";
    display: inline-block;
    margin-left: var(--spacing-2);
    vertical-align: middle;
  }
  
  [dir="rtl"] .form-group:has(.form-control:valid:not(:placeholder-shown)) .form-label::after {
    margin-left: 0;
    margin-right: var(--spacing-2);
  }

  /* Fallback für Browser ohne :has() Unterstützung */
  @supports not (selector(:has(*))) {
    .form-group.invalid {
      border-left: 4px solid var(--color-error);
      padding-left: var(--spacing-3);
    }
    
    [dir="rtl"] .form-group.invalid {
      border-left: none;
      border-right: 4px solid var(--color-error);
      padding-left: 0;
      padding-right: var(--spacing-3);
    }
    
    .form-group.valid {
      border-left: 4px solid var(--color-success);
      padding-left: var(--spacing-3);
    }
    
    [dir="rtl"] .form-group.valid {
      border-left: none;
      border-right: 4px solid var(--color-success);
      padding-left: 0;
      padding-right: var(--spacing-3);
    }
  }

  /* Feedback-Container für Validierungsmeldungen */
  .valid-feedback {
    color: var(--color-success);
    display: none;
    font-size: var(--font-size-sm);
    margin-top: var(--spacing-1);
    width: 100%;
  }

  .invalid-feedback {
    color: var(--color-error);
    display: none;
    font-size: var(--font-size-sm);
    margin-top: var(--spacing-1);
    width: 100%;
  }

  /* Feedback in der modularen Formularstruktur */
  .form-group.valid .feedback {
    color: var(--color-success);
  }
  
  .form-group.invalid .feedback {
    color: var(--color-error);
  }

  /* Anzeigen von Feedback-Meldungen bei Validierung */
  .was-validated .form-control:valid ~ .valid-feedback,
  .was-validated .form-control:invalid ~ .invalid-feedback,
  .form-control.is-valid ~ .valid-feedback,
  .form-control.is-invalid ~ .invalid-feedback {
    display: block;
  }

  /**
   * Größenvarianten für Eingabefelder
   * 
   * Bietet verschiedene Größen für Eingabefelder:
   * - Small (sm): kompakte Größe für platzsparende Layouts
   * - Large (lg): größere Variante für bessere Lesbarkeit oder Touch-Bedienung
   */

  /* Kleine Eingabefelder */
  .form-control-sm {
    border-radius: var(--border-radius-sm);
    font-size: var(--font-size-sm);
    height: calc(var(--input-height) * 0.85);
    padding: var(--spacing-1) var(--spacing-2);
  }

  /* Große Eingabefelder */
  .form-control-lg {
    border-radius: var(--border-radius-lg);
    font-size: var(--font-size-lg);
    height: calc(var(--input-height) * 1.15);
    padding: var(--spacing-3) var(--spacing-4);
  }

  /**
   * Select-Felder
   * 
   * Angepasste Styles für Dropdown-Auswahlfelder mit eigenem Dropdown-Pfeil.
   * Basiert auf .form-control mit zusätzlichen Select-spezifischen Anpassungen.
   */

  /* Basis-Select mit angepasstem Dropdown-Pfeil */
  .form-select {
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3E%3C/svg%3E");
    background-position: right var(--input-padding-x) center;
    background-repeat: no-repeat;
    background-size: var(--select-indicator-size);
    display: block;
    padding-right: var(--select-indicator-padding);
    width: 100%;
  }

  [dir="rtl"] .form-select {
    background-position: left var(--input-padding-x) center;
    padding-left: var(--select-indicator-padding);
    padding-right: var(--input-padding-x);
  }

  /* Kleine Select-Variante */
  .form-select-sm {
    background-position: right var(--spacing-2) center;
    padding-right: calc(var(--select-indicator-padding) * 0.85);
  }

  /* Große Select-Variante */
  .form-select-lg {
    background-position: right var(--spacing-4) center;
    padding-right: calc(var(--select-indicator-padding) * 1.15);
  }

  /**
   * Textarea-Felder
   * 
   * Mehrzeilige Textfelder mit angepassten Eigenschaften.
   * Basiert auf .form-control mit spezifischen Textarea-Anpassungen.
   */

  /* Mehrzeiliges Textfeld mit vertikaler Größenanpassung */
  textarea.form-control {
    min-height: 6rem;
    resize: vertical;
  }

  /**
   * Checkboxen und Radio-Buttons
   * 
   * Angepasstes Styling für Checkboxen und Radio-Buttons mit SVG-Icons.
   * Ermöglicht konsistentes Aussehen über verschiedene Browser hinweg.
   */

  /* Container für Checkbox/Radio */
  .form-check {
    display: block;
    margin-bottom: var(--spacing-2);
    min-height: var(--control-indicator-size);
    padding-left: calc(var(--control-indicator-size) + var(--spacing-2));
    position: relative;
  }

  .form-check:last-child {
    margin-bottom: 0;
  }

  /* Inline-Variante für horizontale Anordnung */
  .form-check-inline {
    align-items: center;
    display: inline-flex;
    margin-right: var(--spacing-4);
  }

  /* Checkbox/Radio Input-Element */
  .form-check-input {
    appearance: none;
    background-color: var(--control-indicator-bg);
    border: var(--input-border-width) solid var(--control-indicator-border-color);
    height: var(--control-indicator-size);
    margin-left: calc(-1 * (var(--control-indicator-size) + var(--spacing-2)));
    margin-top: calc((var(--form-line-height) * var(--form-font-size) - var(--control-indicator-size)) / 2);
    position: absolute;
    print-color-adjust: exact;
    transition: var(--form-transition);
    width: var(--control-indicator-size);
  }

  [dir="rtl"] .form-check-input {
    margin-left: 0;
    margin-right: calc(-1 * (var(--control-indicator-size) + var(--spacing-2)));
  }

  /* Checkbox-spezifische Styles */
  .form-check-input[type="checkbox"] {
    border-radius: var(--border-radius-sm);
  }

  /* Radio-Button-spezifische Styles */
  .form-check-input[type="radio"] {
    border-radius: 50%;
  }

  /* Aktiver Zustand (bei Mausklick) */
  .form-check-input:active {
    filter: brightness(90%);
  }

  /* Fokus-Zustand */
  .form-check-input:focus {
    border-color: var(--color-primary-500);
    box-shadow: 0 0 0 0.2rem rgb(var(--color-primary-rgb), 0.25);
    outline: 0;
  }

  /* Ausgewählter Zustand */
  .form-check-input:checked {
    background-color: var(--control-indicator-checked-bg);
    border-color: var(--control-indicator-checked-border-color);
  }

  /* SVG-Icon für ausgewählte Checkbox */
  .form-check-input:checked[type="checkbox"] {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cpath fill='white' d='M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z'/%3E%3C/svg%3E");
    background-position: center;
    background-repeat: no-repeat;
    background-size: var(--select-indicator-size);
  }

  /* SVG-Icon für ausgewählten Radio-Button */
  .form-check-input:checked[type="radio"] {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Ccircle r='4' fill='white' cx='8' cy='8'/%3E%3C/svg%3E");
    background-position: center;
    background-repeat: no-repeat;
    background-size: var(--select-indicator-size);
  }

  /* Deaktivierter Zustand */
  .form-check-input:disabled {
    filter: none;
    opacity: 50%;
    pointer-events: none;
  }

  .form-check-input:disabled ~ .form-check-label {
    cursor: default;
    opacity: 50%;
  }

  /* Beschriftung für Checkbox/Radio */
  .form-check-label {
    cursor: pointer;
    display: inline-block;
  }

  /**
   * Toggle-Schalter (Switch)
   * 
   * Moderne Alternative zu Checkboxen für Ein/Aus-Optionen.
   * Basiert auf .form-check, mit angepasstem Styling für Schalteroptik.
   */

  /* Container für Toggle-Schalter */
  .form-switch {
    padding-left: calc(var(--control-indicator-size) * 2);
  }

  [dir="rtl"] .form-switch {
    padding-left: 0;
    padding-right: calc(var(--control-indicator-size) * 2);
  }

  /* Toggle-Schalter-Input mit Schieberegler */
  .form-switch .form-check-input {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Ccircle r='3' fill='rgba(0,0,0,0.25)' cx='3' cy='8'/%3E%3C/svg%3E");
    background-position: left center;
    background-repeat: no-repeat;
    border-radius: calc(var(--control-indicator-size) * 0.85);
    height: calc(var(--control-indicator-size) * 0.85);
    transition: background-position var(--transition-normal);
    width: calc(var(--control-indicator-size) * 1.75);
  }

  /* Ausgewählter Zustand des Toggle-Schalters */
  .form-switch .form-check-input:checked {
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Ccircle r='3' fill='%23fff' cx='13' cy='8'/%3E%3C/svg%3E");
    background-position: right center;
  }

  /**
   * Datei-Upload
   * 
   * Angepasste Darstellung für Datei-Upload-Felder mit benutzerdefiniertem Styling.
   */

  /* Container für Datei-Upload */
  .form-file {
    position: relative;
  }

  /* Verstecktes natürliches File-Input */
  .form-file-input {
    height: var(--input-height);
    margin: 0;
    opacity: 0%;
    position: relative;
    width: 100%;
    z-index: 2;
  }

  /* Sichtbares Label für Datei-Upload */
  .form-file-label {
    background-color: var(--input-bg);
    border: var(--input-border-width) solid var(--input-border-color);
    border-radius: var(--input-border-radius);
    display: flex;
    height: var(--input-height);
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
    z-index: 1;
  }

  /* Textbereich für Dateipfad-Anzeige */
  .form-file-text {
    background-color: var(--input-bg);
    border-right: none;
    color: var(--color-text-tertiary);
    flex: 1;
    overflow: hidden;
    padding: var(--input-padding-y) var(--input-padding-x);
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  [dir="rtl"] .form-file-text {
    border-left: none;
    border-right: initial;
  }

  /* Button für Dateiauswahl */
  .form-file-button {
    background-color: var(--color-gray-200);
    border-bottom-right-radius: var(--input-border-radius);
    border-left: inherit;
    border-top-right-radius: var(--input-border-radius);
    color: var(--color-text-primary);
    display: block;
    padding: var(--input-padding-y) var(--input-padding-x);
    z-index: 3;
  }

  [dir="rtl"] .form-file-button {
    border-left: none;
    border-radius: var(--input-border-radius) 0 0 var(--input-border-radius);
    border-right: inherit;
  }

  /**
   * Formular-Aktionen
   * 
   * Container für Formular-Schaltflächen (Absenden, Abbrechen, etc.)
   * Mit flexiblen Layout-Optionen für verschiedene Anordnungen.
   */

  /* Container für Formular-Aktionsschaltflächen */
  .form-actions {
    display: flex;
    gap: var(--spacing-3);
    justify-content: flex-end;
    margin-top: var(--spacing-6);
  }

  [dir="rtl"] .form-actions {
    justify-content: flex-start;
  }

  .form-actions > * {
    flex: 0 0 auto;
  }

  /**
   * Input-Gruppen
   * 
   * Ermöglicht die Kombination von Eingabefeldern mit Text oder Buttons.
   * Nützlich für Währungsangaben, Suchfelder mit Buttons, etc.
   */

  /* Container für Input-Gruppe */
  .input-group {
    align-items: stretch;
    display: flex;
    flex-wrap: nowrap;
    position: relative;
    width: 100%;
  }

  /* Eingabefelder innerhalb einer Input-Gruppe */
  .input-group > .form-control,
  .input-group > .form-select {
    flex: 1 1 auto;
    position: relative;
    width: 1%;
  }

  /* Anpassung der Rahmenradien für zusammenhängende Elemente */
  .input-group > .form-control:not(:first-child),
  .input-group > .form-select:not(:first-child) {
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
  }

  .input-group > .form-control:not(:last-child),
  .input-group > .form-select:not(:last-child) {
    border-bottom-right-radius: 0;
    border-top-right-radius: 0;
  }

  [dir="rtl"] .input-group > .form-control:not(:first-child),
  [dir="rtl"] .input-group > .form-select:not(:first-child) {
    border-radius: 0 var(--input-border-radius) var(--input-border-radius) 0;
  }

  [dir="rtl"] .input-group > .form-control:not(:last-child),
  [dir="rtl"] .input-group > .form-select:not(:last-child) {
    border-radius: var(--input-border-radius) 0 0 var(--input-border-radius);
  }

  /* Text-Element innerhalb einer Input-Gruppe */
  .input-group-text {
    align-items: center;
    background-color: var(--form-group-text-bg); /* Fallback */
    border: var(--input-border-width) solid var(--input-border-color);
    display: flex;
    font-size: var(--form-font-size);
    padding: var(--input-padding-y) var(--input-padding-x);
    white-space: nowrap;
  }

  .input-group-text:first-child {
    border-bottom-left-radius: var(--input-border-radius);
    border-top-left-radius: var(--input-border-radius);
  }

  .input-group-text:last-child {
    border-bottom-right-radius: var(--input-border-radius);
    border-top-right-radius: var(--input-border-radius);
  }

  [dir="rtl"] .input-group-text:first-child {
    border-radius: 0 var(--input-border-radius) var(--input-border-radius) 0;
  }

  [dir="rtl"] .input-group-text:last-child {
    border-radius: var(--input-border-radius) 0 0 var(--input-border-radius);
  }

  /**
   * Horizontales Layout für Formulare
   *
   * Ermöglicht eine horizontale Anordnung von Labels und Eingabefeldern.
   */
  
  /* Horizontales Layout */
  .form.horizontal .form-group,
  .form-horizontal .form-group {
    align-items: center;
    flex-direction: row;
  }
  
  .form.horizontal .form-label,
  .form-horizontal .form-label {
    margin-bottom: 0;
    margin-right: var(--space-4);
    width: 30%;
  }
  
  [dir="rtl"] .form.horizontal .form-label,
  [dir="rtl"] .form-horizontal .form-label {
    margin-left: var(--space-4);
    margin-right: 0;
  }
  
  .form.horizontal .form-control {
    flex: 1;
  }
  
  .form.horizontal .form-text, 
  .form.horizontal .feedback,
  .form-horizontal .form-text,
  .form-horizontal .valid-feedback,
  .form-horizontal .invalid-feedback {
    margin-left: calc(30% + var(--space-4));
  }
  
  [dir="rtl"] .form.horizontal .form-text, 
  [dir="rtl"] .form.horizontal .feedback,
  [dir="rtl"] .form-horizontal .form-text,
  [dir="rtl"] .form-horizontal .valid-feedback,
  [dir="rtl"] .form-horizontal .invalid-feedback {
    margin-left: 0;
    margin-right: calc(30% + var(--space-4));
  }

  /**
   * Spezifische Input-Typen
   * 
   * Angepasste Styles für verschiedene HTML5 Input-Typen.
   * Stellt sicher, dass alle Input-Typen ein konsistentes und ansprechendes Aussehen haben.
   */

  /* Color-Picker Input */
  input[type="color"] {
    cursor: pointer;
    min-height: 2.5rem;
    padding: 0.25rem;
  }

  input[type="color"]::-webkit-color-swatch-wrapper {
    padding: 0;
  }
  
  input[type="color"]::-webkit-color-swatch {
    border: none;
    border-radius: var(--border-radius-sm);
  }

  /* Range Slider */
  input[type="range"] {
    appearance: none;
    background-color: var(--form-range-bg); /* Fallback */
    border-radius: 1rem;
    height: 0.5rem;
    margin: 0.5rem 0;
    outline: none;
    width: 100%;
  }

  input[type="range"]::-webkit-slider-thumb {
    appearance: none;
    background-color: var(--color-primary-500);
    border: none;
    border-radius: 50%;
    cursor: pointer;
    height: 1.25rem;
    width: 1.25rem;
  }

  input[type="range"]::-moz-range-thumb {
    background-color: var(--color-primary-500);
    border: none;
    border-radius: 50%;
    cursor: pointer;
    height: 1.25rem;
    width: 1.25rem;
  }

  input[type="range"]:focus::-webkit-slider-thumb {
    box-shadow: 0 0 0 0.2rem rgb(var(--color-primary-rgb), 0.25);
  }

  input[type="range"]:focus::-moz-range-thumb {
    box-shadow: 0 0 0 0.2rem rgb(var(--color-primary-rgb), 0.25);
  }

  /* Date, Time, DateTime Inputs */
  input[type="date"],
  input[type="datetime-local"],
  input[type="month"],
  input[type="time"],
  input[type="week"] {
    padding-right: 0.5rem;
  }

  /* Search Input */
  input[type="search"] {
    appearance: none;
  }

  input[type="search"]::-webkit-search-cancel-button {
    appearance: none;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%236B7280'%3E%3Cpath d='M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z'/%3E%3C/svg%3E");
    cursor: pointer;
    height: 1rem;
    margin-left: 0.5rem;
    width: 1rem;
  }

  /* File Input - Erweitert die bestehende form-file Klasse */
  input[type="file"] {
    cursor: pointer;
  }

  input[type="file"]::file-selector-button {
    background-color: var(--form-file-button-bg); /* Fallback */
    border: none;
    border-radius: var(--border-radius-sm);
    color: var(--color-text-primary);
    cursor: pointer;
    margin-right: 1rem;
    padding: 0.25rem 0.75rem;
    transition: background-color 0.2s;
  }

  [dir="rtl"] input[type="file"]::file-selector-button {
    margin-left: 1rem;
    margin-right: 0;
  }

  /* URL, Email, Tel und andere Text-basierte Inputs */
  input[type="url"],
  input[type="email"],
  input[type="tel"],
  input[type="password"],
  input[type="text"],
  input[type="number"] {
    /* Diese erben bereits die Basis-Stile von .form-control */
  }

  /* Number Input Spinner */
  input[type="number"]::-webkit-inner-spin-button,
  input[type="number"]::-webkit-outer-spin-button {
    height: auto;
    margin-left: 0.5rem;
    opacity: 100%;
  }

  /* Button-artige Inputs */
  input[type="button"],
  input[type="submit"],
  input[type="reset"] {
    border-radius: var(--input-border-radius);
    cursor: pointer;
    display: inline-block;
    font-weight: var(--font-weight-medium);
    padding: var(--input-padding-y) var(--input-padding-x);
    text-align: center;
    transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    user-select: none;
    vertical-align: middle;
    white-space: nowrap;
  }

  input[type="button"],
  input[type="reset"] {
    background-color: var(--form-button-bg); /* Fallback */
    border: 1px solid var(--form-button-border); /* Fallback */
    color: var(--color-text-primary);
  }

  input[type="button"]:hover,
  input[type="reset"]:hover {
    background-color: var(--form-button-hover-bg); /* Fallback */
  }

  input[type="submit"] {
    background-color: var(--color-primary-500);
    border: 1px solid var(--color-primary-500);
    color: var(--color-white);
  }

  input[type="submit"]:hover {
    background-color: var(--color-primary-600);
    border-color: var(--color-primary-600);
  }

  /* Image Input */
  input[type="image"] {
    background: none;
    border: none;
    cursor: pointer;
    padding: 0;
  }

  /* Hidden Input */
  input[type="hidden"] {
    display: none;
  }

  /* Input Placeholder Styling */
  input::placeholder {
    color: var(--color-text-tertiary);
    opacity: 70%;
  }

  /* Fokus-Zustand für alle Input-Typen */
  input:focus {
    border-color: var(--color-primary-500);
    box-shadow: 0 0 0 0.2rem rgb(var(--color-primary-rgb), 0.25);
    outline: none;
  }
}

/**
 * Form-Komponente - Legacy Unterstützung
 * 
 * Unterstützt die bestehende modulare Struktur der .form-Komponente.
 * Diese Layer-Definition stellt die Kompatibilität mit bestehenden Komponenten sicher.
 */
@layer form {
  /* Vorhandene Stile aus components/form.css werden automatisch durch die oben definierten Klassen unterstützt */
} 

/**
 * Formular-Utilities
 * 
 * Stellt Utility-Klassen für Formulare bereit, die verwendet werden können,
 * um das Verhalten und Aussehen von Formularen anzupassen.
 */
@layer utilities {
  /**
   * Inline Layout für Checkboxen/Radios
   *
   * Ermöglicht eine horizontale Anordnung von Checkboxen und Radios.
   */
  .form-inline-controls,
  .form-inline,
  .inline {
    align-items: center;
    flex-direction: row;
    gap: var(--space-3);
  }
  
  .form-inline-controls .form-label,
  .form-inline .form-label,
  .inline .form-label {
    margin-bottom: 0;
    margin-left: var(--space-2);
  }
  
  [dir="rtl"] .form-inline-controls .form-label,
  [dir="rtl"] .form-inline .form-label,
  [dir="rtl"] .inline .form-label {
    margin-left: 0;
    margin-right: var(--space-2);
  }

  /**
   * Gestapeltes Layout (Stacked)
   *
   * Explizites vertikales Layout für Formulare, bei dem Labels über den Eingabefeldern stehen.
   * Dies ist das Standardverhalten, aber diese Klasse kann für Konsistenz verwendet werden.
   */
  .form-stacked .form-group {
    display: flex;
    flex-direction: column;
    gap: var(--space-2);
  }
  
  .form-stacked .form-label {
    margin-bottom: var(--spacing-1);
    width: 100%;
  }
  
  .form-stacked .form-control {
    width: 100%;
  }
  
  .form-stacked .form-text,
  .form-stacked .feedback {
    margin-top: var(--spacing-1);
  }

  /**
   * Kompaktes Layout
   *
   * Reduziert Abstände für platzsparende Formulare.
   */
  .form.compact, .form-compact {
    gap: var(--space-2);
  }
  
  .form.compact .form-group,
  .form-compact .form-group {
    gap: var(--space-1);
  }

  /**
   * Flüssige Größenanpassung mit interpolate-size: allow-keywords
   *
   * Ermöglicht Formulare mit flüssiger Größenanpassung basierend auf CSS-Schlüsselwörtern.
   */
  .form.fluid {
    /* Nutzt CSS-Schlüsselwörter für Größen - funktioniert mit interpolate-size: allow-keywords */
    font-size: medium; /* Basis-Größe für Skalierungsfaktor */
    gap: 1em;
    
    .form-group {
      gap: 0.5em;
    }
    
    .form-label {
      font-size: 0.875em;
      margin-bottom: 0.25em;
    }
    
    .form-text,
    .feedback {
      font-size: 0.75em;
      margin-top: 0.25em;
    }
    
    .form-actions {
      gap: 0.75em;
      margin-top: 0.5em;
    }
    
    /* Größenvarianten mit CSS-Schlüsselwörtern */
    &.small {
      font-size: small;
    }
    
    &.medium {
      font-size: medium;
    }
    
    &.large {
      font-size: large;
    }
    
    &.x-large {
      font-size: x-large;
    }
    
    /* Horizontales Layout für flüssige Formen */
    &.horizontal {
      .form-group {
        .form-label {
          margin-right: 1em;
        }
        
        .form-text,
        .feedback {
          margin-left: calc(30% + 1em);
        }
      }
    }
  }
  
  /**
   * Container-adaptive Größenanpassung
   *
   * Ermöglicht Formulare, die sich automatisch an die Container-Größe anpassen.
   */
  .form.adaptive {
    container-type: inline-size;
    gap: clamp(var(--space-2), 1cqi, var(--space-6));
    
    .form-group {
      gap: clamp(var(--space-1), 0.5cqi, var(--space-3));
    }
    
    .form-label {
      font-size: clamp(var(--font-size-xs), 1.5cqi, var(--font-size-base));
    }
    
    .form-text,
    .feedback {
      font-size: clamp(var(--font-size-xs), 1cqi, var(--font-size-sm));
    }
    
    .form-actions {
      gap: clamp(var(--space-2), 0.75cqi, var(--space-4));
    }
    
    @container (min-width: 400px) {
      &:not(.horizontal) .form-group {
        max-width: 80%;
      }
    }
    
    @container (min-width: 600px) {
      &.horizontal .form-group {
        flex-direction: row;
        
        .form-label {
          margin-bottom: 0;
          width: 25%;
        }
      }
    }
  }

  /**
   * Barrierefreiheit
   * 
   * Verbesserte Barrierefreiheit für Nutzer mit speziellen Bedürfnissen.
   * Beachtet Einstellungen wie reduzierte Bewegung.
   */
  @container root (prefers-reduced-motion: reduce) {
    .form-element,
    .form-input,
    .form-select,
    .form-textarea,
    .form-checkbox,
    .form-radio,
    .form-switch,
    .form-range,
    .form-field,
    .form-label,
    .form-feedback,
    button,
    .button,
    .input-animate-label .input-label,
    .form-element-validated::before,
    .form-element-validated::after,
    .input-float-label .input-label {
      animation: none !important;
      transform: none !important;
      transition: none !important;
    }
    
    .input-spinner,
    .form-loading,
    .submit-processing,
    .form-validation-icon {
      display: none !important;
    }
  }

  /**
   * Responsive Anpassungen
   * 
   * Spezifische Anpassungen für verschiedene Bildschirmgrößen.
   * Optimiert die Formulardarstellung auf mobilen Geräten.
   */
  @container root (width <= 768px) {
    .form-field {
      margin-block-end: 1rem;
    }
    
    .input-group {
      flex-direction: column;
    }
    
    .input-group > * + * {
      margin-block-start: 0.5rem;
      margin-inline-start: 0;
    }
    
    .checkbox-group, .radio-group {
      align-items: flex-start;
      flex-direction: column;
    }
    
    .form-actions {
      flex-direction: column;
    }
    
    .form-actions > * + * {
      margin-block-start: 0.75rem;
      margin-inline-start: 0;
    }
    
    .form.horizontal .form-group,
    .form-horizontal .form-group {
      align-items: flex-start;
      flex-direction: column;
    }
    
    .form.horizontal .form-label,
    .form-horizontal .form-label {
      margin-bottom: var(--spacing-1);
      margin-right: 0;
      width: 100%;
    }
    
    .form.horizontal .form-text, 
    .form.horizontal .feedback,
    .form-horizontal .form-text,
    .form-horizontal .valid-feedback,
    .form-horizontal .invalid-feedback {
      margin-left: 0;
    }
  }

  /**
   * Unterstützung für flüssige Größenanpassung bei speziellen Input-Typen
   */
  .form.fluid input[type="color"],
  .form.fluid input[type="range"],
  .form.fluid input[type="file"]::file-selector-button {
    scale: 1;
    transform-origin: left center;
  }

  .form.fluid.small input[type="color"],
  .form.fluid.small input[type="range"],
  .form.fluid.small input[type="file"]::file-selector-button {
    scale: 0.85;
  }

  .form.fluid.large input[type="color"],
  .form.fluid.large input[type="range"],
  .form.fluid.large input[type="file"]::file-selector-button {
    scale: 1.15;
  }

  .form.fluid.x-large input[type="color"],
  .form.fluid.x-large input[type="range"],
  .form.fluid.x-large input[type="file"]::file-selector-button {
    scale: 1.3;
  }

  /* Container-adaptive Anpassungen für spezielle Input-Typen */
  .form.adaptive input[type="range"] {
    height: clamp(0.4rem, 0.4cqi, 0.6rem);
  }

  .form.adaptive input[type="range"]::-webkit-slider-thumb {
    height: clamp(1rem, 1.25cqi, 1.5rem);
    width: clamp(1rem, 1.25cqi, 1.5rem);
  }

  .form.adaptive input[type="range"]::-moz-range-thumb {
    height: clamp(1rem, 1.25cqi, 1.5rem);
    width: clamp(1rem, 1.25cqi, 1.5rem);
  }
}