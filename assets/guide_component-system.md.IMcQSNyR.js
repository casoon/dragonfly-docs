import{_ as i,c as a,o as n,ag as e}from"./chunks/framework.CRDvQt42.js";const k=JSON.parse('{"title":"modules system","description":"","frontmatter":{"title":"modules system","category":"Guide"},"headers":[],"relativePath":"guide/component-system.md","filePath":"guide/component-system.md"}'),t={name:"guide/component-system.md"};function l(o,s,r,p,h,d){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="modules-system" tabindex="-1">modules system <a class="header-anchor" href="#modules-system" aria-label="Permalink to &quot;modules system&quot;">​</a></h1><p>The Casoon UI Library modules system organizes components into independent, standalone CSS modules that are loaded through a central control.</p><h2 id="structure-of-the-modules-system" tabindex="-1">Structure of the modules system <a class="header-anchor" href="#structure-of-the-modules-system" aria-label="Permalink to &quot;Structure of the modules system&quot;">​</a></h2><p>The modules are organized in the <code>modules.css</code> file:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Modules CSS</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Central file for organizing and including all modules.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Each modules is defined in its own layer to avoid conflicts.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Alert modules */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/components/alert.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* avatar modules */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/components/avatar.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* badge modules */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/components/badge.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Additional modules... */</span></span></code></pre></div><p>Each modules is imported in its own layer, which offers the following advantages:</p><ul><li>Avoiding name conflicts</li><li>Clear separation of responsibilities</li><li>Independent modification of individual modules</li><li>Improved maintainability through modularity</li></ul><h2 id="available-modules" tabindex="-1">Available Modules <a class="header-anchor" href="#available-modules" aria-label="Permalink to &quot;Available Modules&quot;">​</a></h2><p>The Casoon UI Library includes the following modules:</p><ul><li><strong>alert</strong> - Feedback and notification messages</li><li><strong>avatar</strong> - User images and representations</li><li><strong>badge</strong> - Status indicators and small labels</li><li><strong>blog</strong> - layout elements for blog posts</li><li><strong>button</strong> - Interactive buttons</li><li><strong>card</strong> - Containers for related content</li><li><strong>checkbox</strong> - Multiple-choice elements</li><li><strong>chip</strong> - Compact information elements</li><li><strong>code</strong> - Display of code blocks</li><li><strong>file</strong> - File upload components</li><li><strong>footer</strong> - Page footer area</li><li><strong>form</strong> - Form elements and layouts</li><li><strong>hamburger</strong> - Mobile menu control</li><li><strong>header</strong> - Page header area</li><li><strong>input</strong> - Text input fields</li><li><strong>input-group</strong> - Grouped inputs</li><li><strong>modal</strong> - Dialogs and overlays</li><li><strong>notification</strong> - Notification system</li><li><strong>progress</strong> - Progress indicators</li><li><strong>radio</strong> - Single-choice elements</li><li><strong>select</strong> - Selects</li><li><strong>sidebar</strong> - Side navigation</li><li><strong>skeleton</strong> - Loading placeholders</li><li><strong>slider</strong> - Value sliders</li><li><strong>spinners</strong> - Loading animations</li><li><strong>switch</strong> - On/Off switches</li><li><strong>table</strong> - Table components</li><li><strong>tabs</strong> - Tab navigation</li><li><strong>textarea</strong> - Multi-line text fields</li><li><strong>toast</strong> - Temporary notifications</li><li><strong>tooltip</strong> - Help texts</li><li><strong>widget</strong> - Flexible content containers</li><li><strong>wizard</strong> - Multi-step processes</li></ul><h2 id="modules-usage-in-your-own-projects" tabindex="-1">modules Usage in Your Own Projects <a class="header-anchor" href="#modules-usage-in-your-own-projects" aria-label="Permalink to &quot;modules Usage in Your Own Projects&quot;">​</a></h2><p>To use modules in your project:</p><h3 id="_1-complete-integration-of-all-modules" tabindex="-1">1. Complete Integration of All Modules <a class="header-anchor" href="#_1-complete-integration-of-all-modules" aria-label="Permalink to &quot;1. Complete Integration of All Modules&quot;">​</a></h3><p>Import the core.css, which automatically loads all modules:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/core.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="_2-selective-integration-of-individual-modules" tabindex="-1">2. Selective Integration of Individual Modules <a class="header-anchor" href="#_2-selective-integration-of-individual-modules" aria-label="Permalink to &quot;2. Selective Integration of Individual Modules&quot;">​</a></h3><p>You can also import only selected modules:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Import Base Layer system */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/layers.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Only import needed modules */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/components/button.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/components/input.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/components/card.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="customization-of-modules" tabindex="-1">Customization of Modules <a class="header-anchor" href="#customization-of-modules" aria-label="Permalink to &quot;Customization of Modules&quot;">​</a></h2><h3 id="overriding-modules-styles" tabindex="-1">Overriding modules Styles <a class="header-anchor" href="#overriding-modules-styles" aria-label="Permalink to &quot;Overriding modules Styles&quot;">​</a></h3><p>You can customize modules styles by using the corresponding layer:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Your own CSS file */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/core.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Customization of the button component */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modules-button {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .btn--primary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-brand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--radius-lg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="extending-modules" tabindex="-1">Extending Modules <a class="header-anchor" href="#extending-modules" aria-label="Permalink to &quot;Extending Modules&quot;">​</a></h3><p>Existing modules can be extended:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Your own CSS file */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/core.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Extension of the Card component */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> modules-card {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .card--gradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">linear-gradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">to</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-primary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-accent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-on-primary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="modules-architecture" tabindex="-1">modules Architecture <a class="header-anchor" href="#modules-architecture" aria-label="Permalink to &quot;modules Architecture&quot;">​</a></h2><p>Each modules follows a consistent architecture:</p><ol><li><strong>Base class</strong> - Basic functionality (<code>.btn</code>, <code>.card</code>, etc.)</li><li><strong>Variants</strong> - Functional variants (<code>.btn--primary</code>, <code>.card--interactive</code>)</li><li><strong>Sizes</strong> - Size variants (<code>.btn--sm</code>, <code>.btn--lg</code>)</li><li><strong>States</strong> - Status classes (<code>.btn--disabled</code>, <code>.card--active</code>)</li><li><strong>Modifiers</strong> - Additional customizations (<code>.btn--rounded</code>, <code>.card--shadow</code>)</li></ol><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ul><li><strong>Use Modularization</strong> - Only use the modules you need</li><li><strong>Consistent Naming Conventions</strong> - Follow the format <code>[base-class]--[modifier]</code></li><li><strong>Respect Layers</strong> - Make customizations within the corresponding modules layer</li><li><strong>modules Combination</strong> - Use multiple modules together for complex UI elements</li><li><strong>Consider Themability</strong> - Use tokens to make modules theme-friendly</li></ul>`,30)]))}const g=i(t,[["render",l]]);export{k as __pageData,g as default};
