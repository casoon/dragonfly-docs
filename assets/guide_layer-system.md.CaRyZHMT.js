import{_ as i,c as a,o as e,ag as t}from"./chunks/framework.B6PdRehI.js";const d=JSON.parse('{"title":"Layer System","description":"","frontmatter":{"title":"Layer System","category":"Guide"},"headers":[],"relativePath":"guide/layer-system.md","filePath":"guide/layer-system.md"}'),n={name:"guide/layer-system.md"};function l(r,s,o,p,h,c){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="layer-system" tabindex="-1">Layer System <a class="header-anchor" href="#layer-system" aria-label="Permalink to &quot;Layer System&quot;">​</a></h1><p>The CSS Layer System of the Casoon UI Library uses modern CSS features like <code>@layer</code> to control the specificity and cascading of styles. This creates a predictable and maintainable styling system.</p><blockquote><p><strong>Note on the current version:</strong> The separate <code>custom-properties</code> layer has been integrated into the <code>tokens</code> layer to simplify the structure and improve maintainability.</p></blockquote><h2 id="structure-of-the-layer-system" tabindex="-1">Structure of the Layer System <a class="header-anchor" href="#structure-of-the-layer-system" aria-label="Permalink to &quot;Structure of the Layer System&quot;">​</a></h2><p>The layers are defined in a clear hierarchy:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reset,                /* Basic browser reset */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       tokens,               /* Design tokens and variables */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       core,                 /* Core functionalities */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       logical-properties,   /* Bidirectional layouts (RTL/LTR) */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       colors,               /* Color system */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       color-mix,            /* Color mixtures and variants */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       layout,               /* Layout basics */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       layout-queries,       /* Responsive adjustments */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       typography,           /* Typography system */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       utilities,            /* Atomic utility classes */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       smooth-scroll,        /* Scroll behavior */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       accessibility,        /* Accessibility */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       icons,                /* Icon system */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       components,           /* UI components */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       animations,           /* Motion system */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       effects,              /* Visual effects */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       themes;               /* Theming system */</span></span></code></pre></div><p>The order is crucial: Layers that appear earlier in the list have a lower specificity than later layers.</p><h2 id="centralized-layer-management" tabindex="-1">Centralized Layer Management <a class="header-anchor" href="#centralized-layer-management" aria-label="Permalink to &quot;Centralized Layer Management&quot;">​</a></h2><p>The layer structure is centralized:</p><ol><li>The layer definitions are in the <code>base.css</code> file</li><li>All layer imports are integrated</li><li>This file is imported from the main <code>core.css</code> file</li></ol><p>This approach offers several advantages:</p><ul><li>Clear separation of responsibilities</li><li>Easier debugging of specificity issues</li><li>Easier extensibility through new layers</li><li>Better documentation of the layer structure</li></ul><h2 id="layer-usage-in-your-own-projects" tabindex="-1">Layer Usage in Your Own Projects <a class="header-anchor" href="#layer-usage-in-your-own-projects" aria-label="Permalink to &quot;Layer Usage in Your Own Projects&quot;">​</a></h2><p>To benefit from the layer structure in your project:</p><h3 id="_1-standard-usage" tabindex="-1">1. Standard Usage <a class="header-anchor" href="#_1-standard-usage" aria-label="Permalink to &quot;1. Standard Usage&quot;">​</a></h3><p>Simply import the <code>core.css</code> file, which automatically loads the complete layer system:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/core.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="_2-advanced-usage-with-custom-styles" tabindex="-1">2. Advanced Usage with Custom Styles <a class="header-anchor" href="#_2-advanced-usage-with-custom-styles" aria-label="Permalink to &quot;2. Advanced Usage with Custom Styles&quot;">​</a></h3><p>If you want to add your own styles, use the appropriate layer:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Your own CSS file */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/core.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Add your own components to the components layer */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> components {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .my-component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* Component styles using design tokens */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--space-4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-primary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--radius-md</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Or create a new layer with higher specificity */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> my-custom-layer {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .my-custom-class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    property</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: value;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_3-selective-use-of-layers" tabindex="-1">3. Selective Use of Layers <a class="header-anchor" href="#_3-selective-use-of-layers" aria-label="Permalink to &quot;3. Selective Use of Layers&quot;">​</a></h3><p>You can also import only specific layers:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Use only specific layers */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/base.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* The layer structure */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/layers/reset.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/layers/tokens.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/layers/utilities.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h2 id="layer-descriptions" tabindex="-1">Layer Descriptions <a class="header-anchor" href="#layer-descriptions" aria-label="Permalink to &quot;Layer Descriptions&quot;">​</a></h2><p>Each layer has a specific role in the design system:</p><ul><li><strong>reset</strong>: Reset browser default styles</li><li><strong>tokens</strong>: Design token variables (colors, spacing, typography) and registered CSS properties</li><li><strong>core</strong>: General basic functions</li><li><strong>logical-properties</strong>: Logical properties for bidirectional text (RTL/LTR)</li><li><strong>colors</strong>: Color system and color classes</li><li><strong>color-mix</strong>: Color mixtures and variations</li><li><strong>layout</strong>: Layout basics (container, grid, etc.)</li><li><strong>layout-queries</strong>: Responsive adjustments based on container queries</li><li><strong>typography</strong>: Typography system</li><li><strong>utilities</strong>: Atomic utility classes for quick styling</li><li><strong>smooth-scroll</strong>: Scroll behavior and effects</li><li><strong>accessibility</strong>: Accessibility improvements</li><li><strong>icons</strong>: Icon system</li><li><strong>components</strong>: UI components and component system</li><li><strong>animations</strong>: Animations and motion system</li><li><strong>effects</strong>: Visual effects</li><li><strong>themes</strong>: Theming system</li></ul><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ol><li><strong>Use the appropriate layers</strong>: Assign styles to the semantically correct layer.</li><li><strong>Pay attention to specificity</strong>: The lower in the list, the higher the specificity.</li><li><strong>Minimize !important</strong>: The layer system should reduce the need for !important.</li><li><strong>Document layer usage</strong>: Make it clear which layers you use in your project.</li></ol><h2 id="debugging" tabindex="-1">Debugging <a class="header-anchor" href="#debugging" aria-label="Permalink to &quot;Debugging&quot;">​</a></h2><p>If styles are not applied as expected:</p><ol><li>Check the browser console (DevTools) for errors</li><li>Use the inspector to see which styles are applied and from which layer</li><li>Check if your styles are defined in the correct layer</li><li>Note that styles in later defined layers take precedence</li></ol><h2 id="migration-from-older-versions" tabindex="-1">Migration from Older Versions <a class="header-anchor" href="#migration-from-older-versions" aria-label="Permalink to &quot;Migration from Older Versions&quot;">​</a></h2><p>If you are upgrading from an older version of the UI system:</p><ol><li>Replace imports of older CSS files with the import of <code>core.css</code></li><li>Check if your custom styles are compatible with the new layer structure</li><li>Assign your custom styles to the appropriate layers</li><li>Thoroughly test for styling issues</li></ol>`,34)]))}const y=i(n,[["render",l]]);export{d as __pageData,y as default};
