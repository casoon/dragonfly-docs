import{_ as i,c as e,o as n,ae as a}from"./chunks/framework.BpLw12bU.js";const g=JSON.parse('{"title":"Modul-System","description":"","frontmatter":{"title":"Modul-System","category":"Guide"},"headers":[],"relativePath":"guide/component-system.md","filePath":"guide/component-system.md"}'),l={name:"guide/component-system.md"};function t(r,s,o,h,d,p){return n(),e("div",null,s[0]||(s[0]=[a(`<h1 id="modul-system" tabindex="-1">Modul-System <a class="header-anchor" href="#modul-system" aria-label="Permalink to &quot;Modul-System&quot;">​</a></h1><p>Das Casoon UI Library Modul-System organisiert Komponenten in eigenständige, unabhängige CSS-Module, die über eine zentrale Steuerung geladen werden.</p><h2 id="struktur-des-modul-systems" tabindex="-1">Struktur des Modul-Systems <a class="header-anchor" href="#struktur-des-modul-systems" aria-label="Permalink to &quot;Struktur des Modul-Systems&quot;">​</a></h2><p>Die Module sind in der <code>modules.css</code> Datei organisiert:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Modules CSS</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Zentrale Datei zur Organisation und Einbindung aller Module.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Jedes Modul wird in einem eigenen Layer definiert, um Konflikte zu vermeiden.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Alert Modul */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./modules/alert.module.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) layer(module-alert);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Avatar Modul */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./modules/avatar.module.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) layer(module-avatar);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Badge Modul */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> url</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;./modules/badge.module.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) layer(module-badge);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Weitere Module... */</span></span></code></pre></div><p>Jedes Modul wird in einem eigenen Layer importiert, was folgende Vorteile bietet:</p><ul><li>Vermeidung von Namenskonflikten</li><li>Klare Abgrenzung von Zuständigkeiten</li><li>Unabhängige Modifikation einzelner Module</li><li>Verbesserte Wartbarkeit durch Modularität</li></ul><h2 id="verfugbare-module" tabindex="-1">Verfügbare Module <a class="header-anchor" href="#verfugbare-module" aria-label="Permalink to &quot;Verfügbare Module&quot;">​</a></h2><p>Die Casoon UI Library enthält folgende Module:</p><ul><li><strong>alert</strong> - Feedback- und Hinweismeldungen</li><li><strong>avatar</strong> - Benutzerbilder und -darstellungen</li><li><strong>badge</strong> - Statusanzeigen und kleine Kennzeichnungen</li><li><strong>blog</strong> - Layoutelemente für Blogbeiträge</li><li><strong>button</strong> - Interaktive Schaltflächen</li><li><strong>card</strong> - Container für zusammengehörige Inhalte</li><li><strong>checkbox</strong> - Mehrfachauswahl-Elemente</li><li><strong>chip</strong> - Kompakte Informationselemente</li><li><strong>code</strong> - Darstellung von Codeblöcken</li><li><strong>file</strong> - Datei-Upload-Komponenten</li><li><strong>footer</strong> - Seitenfußbereich</li><li><strong>form</strong> - Formularelemente und -layouts</li><li><strong>hamburger</strong> - Mobile Menüsteuerung</li><li><strong>header</strong> - Seitenkopfbereich</li><li><strong>input</strong> - Texteingabefelder</li><li><strong>input-group</strong> - Gruppierte Eingabefelder</li><li><strong>modal</strong> - Dialoge und Overlays</li><li><strong>notification</strong> - Benachrichtigungssystem</li><li><strong>progress</strong> - Fortschrittsanzeigen</li><li><strong>radio</strong> - Einfachauswahl-Elemente</li><li><strong>select</strong> - Auswahlmenüs</li><li><strong>sidebar</strong> - Seitennavigation</li><li><strong>skeleton</strong> - Ladeplatzhalter</li><li><strong>slider</strong> - Werteregler</li><li><strong>spinner</strong> - Ladeanimationen</li><li><strong>switch</strong> - Ein/Aus-Schalter</li><li><strong>table</strong> - Tabellenkomponenten</li><li><strong>tabs</strong> - Registerkartennavigation</li><li><strong>textarea</strong> - Mehrzeilige Textfelder</li><li><strong>toast</strong> - Temporäre Benachrichtigungen</li><li><strong>tooltip</strong> - Hinweistexte</li><li><strong>widget</strong> - Flexible Inhaltscontainer</li><li><strong>wizard</strong> - Mehrstufige Prozesse</li></ul><h2 id="modul-verwendung-in-eigenen-projekten" tabindex="-1">Modul-Verwendung in eigenen Projekten <a class="header-anchor" href="#modul-verwendung-in-eigenen-projekten" aria-label="Permalink to &quot;Modul-Verwendung in eigenen Projekten&quot;">​</a></h2><p>Um Module in Ihrem Projekt zu nutzen:</p><h3 id="_1-vollstandige-einbindung-aller-module" tabindex="-1">1. Vollständige Einbindung aller Module <a class="header-anchor" href="#_1-vollstandige-einbindung-aller-module" aria-label="Permalink to &quot;1. Vollständige Einbindung aller Module&quot;">​</a></h3><p>Importieren Sie die core.css, die automatisch alle Module lädt:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/core.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="_2-selektive-einbindung-einzelner-module" tabindex="-1">2. Selektive Einbindung einzelner Module <a class="header-anchor" href="#_2-selektive-einbindung-einzelner-module" aria-label="Permalink to &quot;2. Selektive Einbindung einzelner Module&quot;">​</a></h3><p>Sie können auch nur ausgewählte Module importieren:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Basis-Layer-System importieren */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/layers.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Nur benötigte Module importieren */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/modules/button.module.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer(module-button);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/modules/input.module.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer(module-input);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/modules/card.module.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> layer(module-card);</span></span></code></pre></div><h2 id="anpassung-von-modulen" tabindex="-1">Anpassung von Modulen <a class="header-anchor" href="#anpassung-von-modulen" aria-label="Permalink to &quot;Anpassung von Modulen&quot;">​</a></h2><h3 id="uberschreiben-von-modul-stilen" tabindex="-1">Überschreiben von Modul-Stilen <a class="header-anchor" href="#uberschreiben-von-modul-stilen" aria-label="Permalink to &quot;Überschreiben von Modul-Stilen&quot;">​</a></h3><p>Sie können Modul-Stile anpassen, indem Sie den entsprechenden Layer verwenden:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Eigene CSS-Datei */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/core.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Anpassung der Button-Komponente */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> module-button {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .btn--primary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-brand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--radius-lg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="erweiterung-von-modulen" tabindex="-1">Erweiterung von Modulen <a class="header-anchor" href="#erweiterung-von-modulen" aria-label="Permalink to &quot;Erweiterung von Modulen&quot;">​</a></h3><p>Bestehende Module können erweitert werden:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Eigene CSS-Datei */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@casoon/ui-lib/core.css&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Erweiterung der Card-Komponente */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> module-card {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .card--gradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">linear-gradient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">to</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-primary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-accent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--color-on-primary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="modul-architektur" tabindex="-1">Modul-Architektur <a class="header-anchor" href="#modul-architektur" aria-label="Permalink to &quot;Modul-Architektur&quot;">​</a></h2><p>Jedes Modul folgt einer konsistenten Architektur:</p><ol><li><strong>Basisklasse</strong> - Grundlegende Funktionalität (<code>.btn</code>, <code>.card</code>, etc.)</li><li><strong>Varianten</strong> - Funktionale Varianten (<code>.btn--primary</code>, <code>.card--interactive</code>)</li><li><strong>Größen</strong> - Größenvarianten (<code>.btn--sm</code>, <code>.btn--lg</code>)</li><li><strong>Zustände</strong> - Statusklassen (<code>.btn--disabled</code>, <code>.card--active</code>)</li><li><strong>Modifikatoren</strong> - Zusätzliche Anpassungen (<code>.btn--rounded</code>, <code>.card--shadow</code>)</li></ol><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><ul><li><strong>Modularisierung nutzen</strong> - Verwenden Sie nur die Module, die Sie benötigen</li><li><strong>Konsistente Namenskonventionen</strong> - Folgen Sie dem Format <code>[basisklasse]--[modifikator]</code></li><li><strong>Layer respektieren</strong> - Anpassungen innerhalb des entsprechenden Modul-Layers vornehmen</li><li><strong>Modul-Kombination</strong> - Mehrere Module gemeinsam für komplexe UI-Elemente verwenden</li><li><strong>Themability beachten</strong> - Tokens verwenden, um Module theming-freundlich zu gestalten</li></ul>`,30)]))}const u=i(l,[["render",t]]);export{g as __pageData,u as default};
