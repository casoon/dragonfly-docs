import{_ as i,c as e,o as t,ag as a}from"./chunks/framework.CRDvQt42.js";const c=JSON.parse('{"title":"Guide for fortgeschrittene Components","description":"","frontmatter":{},"headers":[],"relativePath":"guide/index.md","filePath":"guide/index.md"}'),n={name:"guide/index.md"};function l(h,s,o,r,p,d){return t(),e("div",null,s[0]||(s[0]=[a(`<h1 id="guide-for-fortgeschrittene-components" tabindex="-1">Guide for fortgeschrittene Components <a class="header-anchor" href="#guide-for-fortgeschrittene-components" aria-label="Permalink to &quot;Guide for fortgeschrittene Components&quot;">​</a></h1><p>in diesem area finden them detaillierte Anleitungen and Best Practices for fortgeschrittene Components and layouts the Casoon UI Library.</p><h2 id="verfugbare-guides" tabindex="-1">Verfugbare Guides <a class="header-anchor" href="#verfugbare-guides" aria-label="Permalink to &quot;Verfugbare Guides&quot;">​</a></h2><ul><li><a href="./grid-system.html">grid system</a> - Lernen them, how them the flexible grid system for responsive layouts einsetzen</li><li><a href="./forms-system.html">Formsystem</a> - Entdecken them the umfassenden Moglichkeiten des Formsystems</li></ul><h2 id="modules-and-components" tabindex="-1">modules and Components <a class="header-anchor" href="#modules-and-components" aria-label="Permalink to &quot;modules and Components&quot;">​</a></h2><p>the Casoon UI Library bietet a umfangreiche Sammlung from Modulen, the them je after Bedarf in her Projekt integrieren can. Im Folgenden finden them einen Uberblick over the wichtigsten modules and ihre jeweiligen Usagesbereiche.</p><h2 id="abhangigkeiten-between-modulen" tabindex="-1">Abhangigkeiten between Modulen <a class="header-anchor" href="#abhangigkeiten-between-modulen" aria-label="Permalink to &quot;Abhangigkeiten between Modulen&quot;">​</a></h2><p><strong>important:</strong> the meisten modules the casoon-ui-lib setzen voraus, that <code>core.css</code> bereits geladen ist. these file enthalt grundlegende Definitionen, variables and Utility-classes, the from anderen Modulen verwendet become.</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Immer zuerst core.css load */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/core.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/themes/day.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* a theme wird empfohlen */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Erst afterwards spezifische modules */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/layout.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/forms.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/components/button.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* usw. */</span></span></code></pre></div><h3 id="importreihenfolge" tabindex="-1">Importreihenfolge <a class="header-anchor" href="#importreihenfolge" aria-label="Permalink to &quot;Importreihenfolge&quot;">​</a></h3><p>the folgende Reihenfolge wird for Imports empfohlen:</p><ol><li><p><strong>Core</strong>: Enthalt grundlegende Layer and wird immer zuerst geladen</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/core.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div></li><li><p><strong>theme</strong>: Mindestens a theme sollte geladen become</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/themes/day.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div></li><li><p><strong>Optionale Layer</strong>: extend the Core-Funktionalitat</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/forms.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/layout.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* additional Layer after Bedarf */</span></span></code></pre></div></li><li><p><strong>modules</strong>: Spezifische Components after Bedarf</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/components/button.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/components/input.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* additional modules after Bedarf */</span></span></code></pre></div></li></ol><p>these Reihenfolge stellt sicher, that all Abhangigkeiten korrekt aufgelost become.</p><h3 id="layout-modules" tabindex="-1">layout-modules <a class="header-anchor" href="#layout-modules" aria-label="Permalink to &quot;layout-modules&quot;">​</a></h3><table tabindex="0"><thead><tr><th>modules</th><th>Description</th><th>Import</th><th>Abhangigkeiten</th></tr></thead><tbody><tr><td>layout</td><td>Grundlegende layout-Strukturen and containers</td><td><code>@import &#39;@casoon/ui-lib/layout.css&#39;;</code></td><td>core.css</td></tr><tr><td>grid</td><td>Flexibles grid system for responsive layouts</td><td>Enthalten in layout.css</td><td>core.css, layout.css</td></tr><tr><td>containers</td><td>Vordefinierte containers with responsiven Breiten</td><td>Enthalten in layout.css</td><td>core.css, layout.css</td></tr></tbody></table><h3 id="form-modules" tabindex="-1">Form-modules <a class="header-anchor" href="#form-modules" aria-label="Permalink to &quot;Form-modules&quot;">​</a></h3><table tabindex="0"><thead><tr><th>modules</th><th>Description</th><th>Import</th><th>Abhangigkeiten</th></tr></thead><tbody><tr><td>Forms</td><td>Allgemeine Form-Styles</td><td><code>@import &#39;@casoon/ui-lib/forms.css&#39;;</code></td><td>core.css</td></tr><tr><td>Input</td><td>Text-Inputer</td><td><code>@import &#39;@casoon/ui-lib/components/input.css&#39;;</code></td><td>core.css, forms.css</td></tr><tr><td>Textarea</td><td>textareas</td><td><code>@import &#39;@casoon/ui-lib/components/textarea.css&#39;;</code></td><td>core.css, forms.css</td></tr><tr><td>Select</td><td>Checkboxer and Dropdowns</td><td><code>@import &#39;@casoon/ui-lib/components/select.css&#39;;</code></td><td>core.css, forms.css</td></tr><tr><td>checkbox</td><td>checkboxes and Auswahloptionen</td><td><code>@import &#39;@casoon/ui-lib/components/checkbox.css&#39;;</code></td><td>core.css, forms.css</td></tr><tr><td>Radio</td><td>Radio-buttons</td><td><code>@import &#39;@casoon/ui-lib/components/radio.css&#39;;</code></td><td>core.css, forms.css</td></tr><tr><td>Switch</td><td>Toggle-Switch</td><td><code>@import &#39;@casoon/ui-lib/components/switch.css&#39;;</code></td><td>core.css, forms.css</td></tr><tr><td>File</td><td>file-Upload-elements</td><td><code>@import &#39;@casoon/ui-lib/components/file.css&#39;;</code></td><td>core.css, forms.css</td></tr></tbody></table><h3 id="integration-with-dem-design-system" tabindex="-1">Integration with dem design-system <a class="header-anchor" href="#integration-with-dem-design-system" aria-label="Permalink to &quot;Integration with dem design-system&quot;">​</a></h3><p>the in diesen Guides beschriebenen Components sind Teil des gesamten design-Systems and integrieren oneself nahtlos with anderen Components the Casoon UI Library. note folgende Prinzipien for a optimale Integration:</p><ol><li><p><strong>Konsistente Usage from CSS Variables</strong></p><ul><li>use them vorhandene variables for Colors, Abstande and Typography</li><li>create them at Bedarf neue variables after dem bestehenden pattern</li></ul></li><li><p><strong>responsive design</strong></p><ul><li>use them the grid system for responsive layouts</li><li>use them the vordefinierten Breakpoints for konsistente Medienabfragen</li></ul></li><li><p><strong>Accessibility</strong></p><ul><li>ensure them on ausreichenden Kontrast and semantisches Markup</li><li>use them ARIA-attributes for verbesserte Accessibility</li></ul></li><li><p><strong>Modulare Integration</strong></p><ul><li>import them only the modules, the them tatsachlich benotigen</li><li>combine them modules to komplexeren Components after Bedarf</li></ul></li></ol><h2 id="best-practices" tabindex="-1">Best Practices <a class="header-anchor" href="#best-practices" aria-label="Permalink to &quot;Best Practices&quot;">​</a></h2><h3 id="optimale-performance" tabindex="-1">Optimale Performance <a class="header-anchor" href="#optimale-performance" aria-label="Permalink to &quot;Optimale Performance&quot;">​</a></h3><ul><li>Vermeiden them ubermassige Verschachtelung from Selektoren</li><li>use them the CSS-Strukturen the Bibliothek effizient</li><li>ensure them on the Dateigrosse through selektive Imports</li></ul><h3 id="codequalitat" tabindex="-1">Codequalitat <a class="header-anchor" href="#codequalitat" aria-label="Permalink to &quot;Codequalitat&quot;">​</a></h3><ul><li>Halten them oneself on the BEM-Namenskonventionen (Block__Element--Modifier)</li><li>Gruppieren them zusammengehorige Styles</li><li>Dokumentieren them komplexe or ungewohnliche Implementierungen</li></ul><h3 id="responsive-design" tabindex="-1">responsive design <a class="header-anchor" href="#responsive-design" aria-label="Permalink to &quot;responsive design&quot;">​</a></h3><ul><li>Testen them Ihre Components on verschiedenen Bildschirmgrossen</li><li>use them flexible Einheiten (rem, em, %) instead of fester Pixel-values</li><li>use them the responsiven Utility-classes the Casoon UI Library</li></ul><h2 id="haufige-fragen" tabindex="-1">Haufige Fragen <a class="header-anchor" href="#haufige-fragen" aria-label="Permalink to &quot;Haufige Fragen&quot;">​</a></h2><h3 id="how-kombiniere-i-grid-and-forme" tabindex="-1">how kombiniere I grid and Forme? <a class="header-anchor" href="#how-kombiniere-i-grid-and-forme" aria-label="Permalink to &quot;how kombiniere I grid and Forme?&quot;">​</a></h3><p>the grid system and the Formkomponenten lassen oneself ideal combine, um komplexe, responsive Formlayouts to create. a typisches Example ist the Aufteilung from Formfeldern in several columns:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">form</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;form&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;grid grid-cols-1 md:grid-cols-2 gap-4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;form-group&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;firstname&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;form-label&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Vorname&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;firstname&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;form-input&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;form-group&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;lastname&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;form-label&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Nachname&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;lastname&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;form-input&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  &lt;!-- additional Formfelder --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">form</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="kann-i-own-css-variables-define" tabindex="-1">Kann I own CSS Variables define? <a class="header-anchor" href="#kann-i-own-css-variables-define" aria-label="Permalink to &quot;Kann I own CSS Variables define?&quot;">​</a></h3><p>Ja, You can own CSS Variables define or bestehende overwrite, um the design-system on Ihre Bedurfnisse anzupassen:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* overwrite einer bestehenden variable */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --form-input-border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* define einer neuen variable */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --custom-component-padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="what-passiert-if-i-abhangigkeiten-not-in-the-richtigen-reihenfolge-lade" tabindex="-1">what passiert, if I Abhangigkeiten not in the richtigen Reihenfolge lade? <a class="header-anchor" href="#what-passiert-if-i-abhangigkeiten-not-in-the-richtigen-reihenfolge-lade" aria-label="Permalink to &quot;what passiert, if I Abhangigkeiten not in the richtigen Reihenfolge lade?&quot;">​</a></h3><p>if the CSS-Dateien not in the korrekten Reihenfolge geladen become, can verschiedene Probleme auftreten:</p><ol><li><strong>Fehlende Styles:</strong> Components erscheinen unstyled or only teilweise gestylt</li><li><strong>Fehlerhafte layouts:</strong> grid Systeme funktionieren not korrekt</li><li><strong>CSS Variables not verfugbar:</strong> Referenzen on variables how <code>var(--color-primary)</code> become not aufgelost</li><li><strong>Utility-classes not verfugbar:</strong> classes how <code>flex</code>, <code>grid</code> or <code>hidden</code> funktionieren not</li></ol><p><strong>Example for a Problem:</strong></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* FALSCH: modules before core.css load */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/components/button.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/core.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>Hier wurde the button modules vielleicht Referenzen on variables or Utility-classes enthalten, the erst in core.css definiert become, what to fehlerhafter Display fuhrt.</p><p><strong>Richtige Losung:</strong></p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* RICHTIG: core.css zuerst load */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/core.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/components/button.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="kann-i-einzelne-components-without-core-css-use" tabindex="-1">Kann I einzelne Components without core.css use? <a class="header-anchor" href="#kann-i-einzelne-components-without-core-css-use" aria-label="Permalink to &quot;Kann I einzelne Components without core.css use?&quot;">​</a></h3><p>Nein, beinahe all Components the casoon-ui-lib setzen voraus, that <code>core.css</code> geladen ist. self if a Component scheinbar unabhangig funktioniert, ist it very wahrscheinlich, that them on variables, Utility-classes or grundlegende Styles aus <code>core.css</code> zuruckgreift.</p><p>If you only einzelne Components benotigen, load them despite that immer zuerst <code>core.css</code> and dann the spezifischen modules, the them use want to. the modulare Aufbau the Bibliothek stellt sicher, that only the tatsachlich genutzten CSS-Regeln angewendet become.</p>`,45)]))}const g=i(n,[["render",l]]);export{c as __pageData,g as default};
