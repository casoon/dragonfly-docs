import{U as a}from"./chunks/theme.4s72HBny.js";import{c as e,o as t,j as i,ag as n,a as l,t as h,k as r}from"./chunks/framework.B6PdRehI.js";const E=JSON.parse('{"title":"Introduction","description":"","frontmatter":{"title":"Introduction","category":"Getting Started"},"headers":[],"relativePath":"getting-started/index.md","filePath":"getting-started/index.md"}'),o={name:"getting-started/index.md"},g=Object.assign(o,{setup(p){return(k,s)=>(t(),e("div",null,[s[0]||(s[0]=i("h1",{id:"getting-started-with-casoon-ui",tabindex:"-1"},[l("Getting Started with Casoon UI "),i("a",{class:"header-anchor",href:"#getting-started-with-casoon-ui","aria-label":'Permalink to "Getting Started with Casoon UI"'},"​")],-1)),i("p",null,"Welcome to the Casoon UI Library. This page provides a comprehensive introduction to the library and its core concepts. The current version is "+h(r(a))+".",1),s[1]||(s[1]=n(`<h2 id="technical-foundations" tabindex="-1">Technical Foundations <a class="header-anchor" href="#technical-foundations" aria-label="Permalink to &quot;Technical Foundations&quot;">​</a></h2><p>The Casoon UI Library is based on advanced web technologies and offers a modern approach to UI development:</p><ul><li><strong>CSS Layer-based Architecture</strong>: Precise control of specificity and clean code organization</li><li><strong>Container Queries</strong>: Component-based responsiveness for more flexible layouts</li><li><strong>Lightning CSS Optimization</strong>: Efficient processing of modern CSS features</li><li><strong>Accessibility</strong>: Comprehensive support for assistive technologies</li></ul><h2 id="css-layer-system-in-detail" tabindex="-1">CSS Layer System in Detail <a class="header-anchor" href="#css-layer-system-in-detail" aria-label="Permalink to &quot;CSS Layer System in Detail&quot;">​</a></h2><p>The heart of the Casoon UI Library is the precisely structured layer system:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@layer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> reset,                /* Basic browser reset */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       tokens,               /* Design tokens and variables */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       core,                 /* Core functionalities */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       logical-properties,   /* Bidirectional layouts (RTL/LTR) */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       colors,               /* Color system */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       color-mix,            /* Color mixtures and variants */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       layout,               /* Layout foundations */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       layout-queries,       /* Responsive adaptations */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       typography,           /* Typography system */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       utilities,            /* Atomic utility classes */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       smooth-scroll,        /* Scroll behavior */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       accessibility,        /* Accessibility */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       icons,                /* Icon system */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       components,           /* UI components */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       animations,           /* Motion system */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       effects,              /* Visual effects */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       themes;               /* Theming system */</span></span></code></pre></div><p>This layer system offers several advantages:</p><ul><li>Avoidance of specificity conflicts</li><li>Better code organization</li><li>Possibility for selective overrides</li></ul><h2 id="container-queries-in-practice" tabindex="-1">Container Queries in Practice <a class="header-anchor" href="#container-queries-in-practice" aria-label="Permalink to &quot;Container Queries in Practice&quot;">​</a></h2><p>The Casoon UI Library uses Container Queries for component-based responsiveness:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;container-query&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;grid sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;!-- Content adapts to the size of the container, not the viewport --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>This enables more flexible layout design than classic media queries, as components can respond based on the available space of their container.</p><h2 id="working-with-design-tokens" tabindex="-1">Working with Design Tokens <a class="header-anchor" href="#working-with-design-tokens" aria-label="Permalink to &quot;Working with Design Tokens&quot;">​</a></h2><p>Design tokens are the building blocks of the visual system:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">:root</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* Primary colors */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --color-primary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#3366FF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --color-primary-light</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#6699FF</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --color-primary-dark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#0033CC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* Spacing */</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --space-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.25</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  --space-2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* ... more tokens ... */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Using design tokens instead of hardcoded values ensures:</p><ul><li>Consistent design</li><li>Easier maintenance</li><li>More flexible theming options</li></ul><h2 id="getting-started-for-developers" tabindex="-1">Getting Started for Developers <a class="header-anchor" href="#getting-started-for-developers" aria-label="Permalink to &quot;Getting Started for Developers&quot;">​</a></h2><p>To quickly work with the Casoon UI Library, we recommend the following first steps:</p><ol><li><strong>Installation</strong>: Follow our <a href="/ui-docs/getting-started/installation.html">detailed installation guide</a></li><li><strong>Explore the components</strong>: Check out the available <a href="/ui-docs/components/">components</a></li><li><strong>Learn the utility classes</strong>: Use the <a href="/ui-docs/getting-started/utilities.html">utility classes</a> for quick styling</li><li><strong>Understand the themes</strong>: Learn how to customize <a href="/ui-docs/getting-started/themes.html">themes</a></li></ol><h2 id="framework-integration" tabindex="-1">Framework Integration <a class="header-anchor" href="#framework-integration" aria-label="Permalink to &quot;Framework Integration&quot;">​</a></h2><p>The Casoon UI Library works with all modern JavaScript frameworks:</p><h3 id="react" tabindex="-1">React <a class="header-anchor" href="#react" aria-label="Permalink to &quot;React&quot;">​</a></h3><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// In your App.jsx or index.jsx</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/core.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/themes/day.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;theme-day&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button primary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Click me&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="vue-js" tabindex="-1">Vue.js <a class="header-anchor" href="#vue-js" aria-label="Permalink to &quot;Vue.js&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// In your main.js</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/core.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/themes/day.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="astro" tabindex="-1">Astro <a class="header-anchor" href="#astro" aria-label="Permalink to &quot;Astro&quot;">​</a></h3><div class="language-astro vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">astro</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">---</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// In your .astro file</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/core.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@casoon/ui-lib/themes/day.css&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">---</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;theme-day&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;button primary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Click me&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="frequently-asked-questions-faq" tabindex="-1">Frequently Asked Questions (FAQ) <a class="header-anchor" href="#frequently-asked-questions-faq" aria-label="Permalink to &quot;Frequently Asked Questions (FAQ)&quot;">​</a></h2><h3 id="can-i-use-the-library-with-react-vue-angular" tabindex="-1">Can I use the library with React/Vue/Angular? <a class="header-anchor" href="#can-i-use-the-library-with-react-vue-angular" aria-label="Permalink to &quot;Can I use the library with React/Vue/Angular?&quot;">​</a></h3><p>Yes, the Casoon UI Library is framework-agnostic and works with all modern frontend frameworks.</p><h3 id="can-i-use-only-specific-components" tabindex="-1">Can I use only specific components? <a class="header-anchor" href="#can-i-use-only-specific-components" aria-label="Permalink to &quot;Can I use only specific components?&quot;">​</a></h3><p>Yes, you can import individual modules to reduce file size.</p><h3 id="does-the-library-support-dark-mode" tabindex="-1">Does the library support Dark Mode? <a class="header-anchor" href="#does-the-library-support-dark-mode" aria-label="Permalink to &quot;Does the library support Dark Mode?&quot;">​</a></h3><p>Yes, the library offers full Dark Mode support through themes.</p><h3 id="how-can-i-adapt-the-design-to-my-brand" tabindex="-1">How can I adapt the design to my brand? <a class="header-anchor" href="#how-can-i-adapt-the-design-to-my-brand" aria-label="Permalink to &quot;How can I adapt the design to my brand?&quot;">​</a></h3><p>You can override design tokens via CSS variables or create your own themes.</p><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="components-are-not-displayed-correctly" tabindex="-1">Components are not displayed correctly <a class="header-anchor" href="#components-are-not-displayed-correctly" aria-label="Permalink to &quot;Components are not displayed correctly&quot;">​</a></h3><p>Make sure you have imported <code>core.css</code> and a theme, and that the theme class is present in the HTML.</p><h3 id="css-conflicts-with-other-libraries" tabindex="-1">CSS conflicts with other libraries <a class="header-anchor" href="#css-conflicts-with-other-libraries" aria-label="Permalink to &quot;CSS conflicts with other libraries&quot;">​</a></h3><p>Use the specific layer names to adjust the priority of Casoon styles.</p><h3 id="responsive-layouts-are-not-working-as-expected" tabindex="-1">Responsive layouts are not working as expected <a class="header-anchor" href="#responsive-layouts-are-not-working-as-expected" aria-label="Permalink to &quot;Responsive layouts are not working as expected&quot;">​</a></h3><p>Check if you are using Container Queries correctly and using the appropriate classes.</p><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ul><li><a href="/ui-docs/getting-started/installation.html">Installation and Configuration</a> - Detailed installation instructions</li><li><a href="/ui-docs/getting-started/layout.html">Learning the Layout System</a> - Learn more about the layout system</li><li><a href="/ui-docs/components/">Exploring Components</a> - Discover the available components</li><li><a href="/ui-docs/effects-system.html">Effects</a> - Explore the visual effects and animations</li></ul><h2 id="note-on-version-0-5-5" tabindex="-1">Note on Version 0.5.5 <a class="header-anchor" href="#note-on-version-0-5-5" aria-label="Permalink to &quot;Note on Version 0.5.5&quot;">​</a></h2><p>Version 0.5.5 includes minor optimizations and bug fixes. Please check the Release Notes for details on changes to layer structure, animations, and utilities.</p>`,48))]))}});export{E as __pageData,g as default};
