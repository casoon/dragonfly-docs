import{_ as a,c as i,o as s,ag as e}from"./chunks/framework.CRDvQt42.js";const k=JSON.parse('{"title":"Core Features Compatibility","description":"","frontmatter":{"title":"Core Features Compatibility","category":"Compatibility","outline":"deep"},"headers":[],"relativePath":"compatibility/core.md","filePath":"compatibility/core.md"}'),d={name:"compatibility/core.md"};function r(l,t,n,o,h,p){return s(),i("div",null,t[0]||(t[0]=[e(`<h1 id="core-features-compatibility" tabindex="-1">Core Features Compatibility <a class="header-anchor" href="#core-features-compatibility" aria-label="Permalink to &quot;Core Features Compatibility&quot;">​</a></h1><p>This page details the browser compatibility of the core features of Casoon UI Library, including CSS variables, reset styles, the layer system, and logical properties.</p><h2 id="css-variables-custom-properties" tabindex="-1">CSS Variables (Custom Properties) <a class="header-anchor" href="#css-variables-custom-properties" aria-label="Permalink to &quot;CSS Variables (Custom Properties)&quot;">​</a></h2><p>CSS Variables are essential to the theming and customization capabilities of Casoon UI Library.</p><table tabindex="0"><thead><tr><th>Feature</th><th>Chrome</th><th>Firefox</th><th>Safari</th><th>Edge</th><th>iOS Safari</th><th>Android Chrome</th></tr></thead><tbody><tr><td>Basic CSS Variables</td><td>49+</td><td>31+</td><td>9.1+</td><td>15+</td><td>9.3+</td><td>49+</td></tr><tr><td>CSS Variables in media queries</td><td>69+</td><td>31+</td><td>11.1+</td><td>79+</td><td>11.3+</td><td>69+</td></tr><tr><td>Computed value changes</td><td>49+</td><td>31+</td><td>9.1+</td><td>15+</td><td>9.3+</td><td>49+</td></tr></tbody></table><h3 id="fallback-strategy" tabindex="-1">Fallback Strategy <a class="header-anchor" href="#fallback-strategy" aria-label="Permalink to &quot;Fallback Strategy&quot;">​</a></h3><p>For browsers that don&#39;t support CSS variables, we recommend:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Fallback value first */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">--theme-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">blue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>For more complex theming needs in older browsers, consider using a CSS variables polyfill or generating separate CSS files for each theme.</p><h2 id="css-reset-and-normalization" tabindex="-1">CSS Reset and Normalization <a class="header-anchor" href="#css-reset-and-normalization" aria-label="Permalink to &quot;CSS Reset and Normalization&quot;">​</a></h2><p>The reset styles in Casoon UI Library are compatible with all modern browsers and help standardize default styles.</p><table tabindex="0"><thead><tr><th>Feature</th><th>Chrome</th><th>Firefox</th><th>Safari</th><th>Edge</th><th>iOS Safari</th><th>Android Chrome</th></tr></thead><tbody><tr><td>Box-sizing reset</td><td>1+</td><td>1+</td><td>1+</td><td>12+</td><td>1+</td><td>1+</td></tr><tr><td>Margin/padding reset</td><td>1+</td><td>1+</td><td>1+</td><td>12+</td><td>1+</td><td>1+</td></tr><tr><td>Typography normalization</td><td>1+</td><td>1+</td><td>1+</td><td>12+</td><td>1+</td><td>1+</td></tr><tr><td>Form element reset</td><td>1+</td><td>1+</td><td>1+</td><td>12+</td><td>1+</td><td>1+</td></tr></tbody></table><p>No specific fallbacks are required for reset styles as they use basic CSS properties supported in all browsers.</p><h2 id="css-layer-system" tabindex="-1">CSS Layer system <a class="header-anchor" href="#css-layer-system" aria-label="Permalink to &quot;CSS Layer system&quot;">​</a></h2><p>The <code>@layer</code> directive is used to manage style specificity in Casoon UI Library.</p><table tabindex="0"><thead><tr><th>Feature</th><th>Chrome</th><th>Firefox</th><th>Safari</th><th>Edge</th><th>iOS Safari</th><th>Android Chrome</th></tr></thead><tbody><tr><td>Basic <code>@layer</code> support</td><td>99+</td><td>97+</td><td>15.4+</td><td>99+</td><td>15.4+</td><td>99+</td></tr><tr><td>Nested layers</td><td>99+</td><td>97+</td><td>15.4+</td><td>99+</td><td>15.4+</td><td>99+</td></tr><tr><td>Layer ordering</td><td>99+</td><td>97+</td><td>15.4+</td><td>99+</td><td>15.4+</td><td>99+</td></tr></tbody></table><h3 id="fallback-strategy-1" tabindex="-1">Fallback Strategy <a class="header-anchor" href="#fallback-strategy-1" aria-label="Permalink to &quot;Fallback Strategy&quot;">​</a></h3><p>For browsers without <code>@layer</code> support, the library falls back to careful ordering of CSS files and specificity management. Import the CSS files in the following order:</p><ol><li>Reset styles</li><li>Base styles</li><li>Component styles</li><li>Utility classes</li></ol><h2 id="logical-properties" tabindex="-1">Logical Properties <a class="header-anchor" href="#logical-properties" aria-label="Permalink to &quot;Logical Properties&quot;">​</a></h2><p>Logical properties provide direction-agnostic layout capabilities, crucial for RTL language support.</p><table tabindex="0"><thead><tr><th>Feature</th><th>Chrome</th><th>Firefox</th><th>Safari</th><th>Edge</th><th>iOS Safari</th><th>Android Chrome</th></tr></thead><tbody><tr><td>Logical box model properties (margin, padding)</td><td>69+</td><td>41+</td><td>12.1+</td><td>79+</td><td>12.2+</td><td>69+</td></tr><tr><td>Logical dimensions (inline-size, block-size)</td><td>69+</td><td>41+</td><td>12.1+</td><td>79+</td><td>12.2+</td><td>69+</td></tr><tr><td>Logical borders</td><td>69+</td><td>41+</td><td>12.1+</td><td>79+</td><td>12.2+</td><td>69+</td></tr><tr><td>Logical positions (inset-block, inset-inline)</td><td>87+</td><td>63+</td><td>14.1+</td><td>87+</td><td>14.5+</td><td>87+</td></tr></tbody></table><h3 id="fallback-strategy-2" tabindex="-1">Fallback Strategy <a class="header-anchor" href="#fallback-strategy-2" aria-label="Permalink to &quot;Fallback Strategy&quot;">​</a></h3><p>For browsers without logical property support, the library provides both logical and physical properties:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Physical properties (fallback) */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin-right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* Logical properties */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  margin-inline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>For complete RTL support in older browsers, use a build process that generates separate LTR and RTL stylesheets with physical properties.</p><h2 id="css-color-functions" tabindex="-1">CSS Color Functions <a class="header-anchor" href="#css-color-functions" aria-label="Permalink to &quot;CSS Color Functions&quot;">​</a></h2><p>Modern color manipulation functions enhance the flexibility of the color system.</p><table tabindex="0"><thead><tr><th>Feature</th><th>Chrome</th><th>Firefox</th><th>Safari</th><th>Edge</th><th>iOS Safari</th><th>Android Chrome</th></tr></thead><tbody><tr><td><code>rgb()</code> and <code>rgba()</code></td><td>1+</td><td>1+</td><td>1+</td><td>12+</td><td>1+</td><td>1+</td></tr><tr><td><code>hsl()</code> and <code>hsla()</code></td><td>1+</td><td>1+</td><td>1+</td><td>12+</td><td>1+</td><td>1+</td></tr><tr><td><code>color-mix()</code></td><td>111+</td><td>113+</td><td>16.4+</td><td>111+</td><td>16.4+</td><td>111+</td></tr><tr><td><code>color()</code> function</td><td>Not supported</td><td>Not supported</td><td>Not supported</td><td>Not supported</td><td>Not supported</td><td>Not supported</td></tr><tr><td><code>lab()</code> and <code>lch()</code> colors</td><td>111+</td><td>113+</td><td>15+</td><td>111+</td><td>15+</td><td>111+</td></tr></tbody></table><h3 id="fallback-strategy-3" tabindex="-1">Fallback Strategy <a class="header-anchor" href="#fallback-strategy-3" aria-label="Permalink to &quot;Fallback Strategy&quot;">​</a></h3><p>For advanced color functions, pre-compute values for older browsers:</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* Fallback solid colors */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#8860db</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  /* Modern browsers with color-mix */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">color-mix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> srgb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">blue</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">red</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Consider using a CSS preprocessor like Sass to generate computed colors for older browsers.</p><h2 id="css-containment" tabindex="-1">CSS Containment <a class="header-anchor" href="#css-containment" aria-label="Permalink to &quot;CSS Containment&quot;">​</a></h2><p>CSS Containment improves performance by isolating parts of the page.</p><table tabindex="0"><thead><tr><th>Feature</th><th>Chrome</th><th>Firefox</th><th>Safari</th><th>Edge</th><th>iOS Safari</th><th>Android Chrome</th></tr></thead><tbody><tr><td><code>contain: content</code></td><td>52+</td><td>69+</td><td>15.4+</td><td>79+</td><td>15.4+</td><td>52+</td></tr><tr><td><code>contain: layout</code></td><td>52+</td><td>69+</td><td>15.4+</td><td>79+</td><td>15.4+</td><td>52+</td></tr><tr><td><code>contain: style</code></td><td>52+</td><td>69+</td><td>15.4+</td><td>79+</td><td>15.4+</td><td>52+</td></tr><tr><td><code>contain: paint</code></td><td>52+</td><td>69+</td><td>15.4+</td><td>79+</td><td>15.4+</td><td>52+</td></tr><tr><td><code>contain: size</code></td><td>52+</td><td>69+</td><td>15.4+</td><td>79+</td><td>15.4+</td><td>52+</td></tr><tr><td><code>content-visibility</code></td><td>85+</td><td>94+</td><td>15.4+</td><td>85+</td><td>15.4+</td><td>85+</td></tr></tbody></table><h3 id="fallback-strategy-4" tabindex="-1">Fallback Strategy <a class="header-anchor" href="#fallback-strategy-4" aria-label="Permalink to &quot;Fallback Strategy&quot;">​</a></h3><p>Containment is a performance optimization and gracefully degrades; no specific fallback is required beyond ensuring elements have appropriate dimensions.</p><h2 id="conclusion" tabindex="-1">Conclusion <a class="header-anchor" href="#conclusion" aria-label="Permalink to &quot;Conclusion&quot;">​</a></h2><p>The core features of Casoon UI Library are well-supported in modern browsers. For older browsers, the fallback strategies outlined above ensure a functional experience while newer browsers get the full enhanced experience.</p><p>When implementing the library, consider:</p><ol><li>The minimum browser versions your project needs to support</li><li>Which features are critical vs. enhancements</li><li>Whether to use polyfills for broader compatibility</li><li>Testing in representative browsers from your user base</li></ol><p>For detailed implementation guidance, see the <a href="/dragonfly-docs/compatibility/fallbacks.html">Fallback Strategies</a> page.</p>`,43)]))}const b=a(d,[["render",r]]);export{k as __pageData,b as default};
